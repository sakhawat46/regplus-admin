# Generated by Django 5.0.6 on 2025-05-25 18:41

import ckeditor.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColorSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_color_mode', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='dark', max_length=10, verbose_name='Default Color Mode')),
                ('primary_color', models.CharField(help_text='Hex code for the primary color (e.g., #3366FF)', max_length=7, verbose_name='Primary Color')),
                ('primary_hover_link_color', models.CharField(help_text='Hex code for primary hover and link color', max_length=7, verbose_name='Primary Hover & Link Color')),
                ('whatsapp_button_shed_color', models.CharField(help_text='Hex code for WhatsApp button color', max_length=7, verbose_name='WhatsApp Button Shed Color')),
            ],
        ),
        migrations.CreateModel(
            name='ContactSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_whatsapp', models.CharField(max_length=20, verbose_name='Phone (WhatsApp)')),
                ('price_range', models.CharField(max_length=50, verbose_name='Price Range')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('state', models.CharField(max_length=100, verbose_name='State')),
                ('postal', models.CharField(max_length=20, verbose_name='Postal')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
            ],
        ),
        migrations.CreateModel(
            name='CurrencySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_name', models.CharField(max_length=20)),
                ('currency_symbul', models.CharField(max_length=5)),
                ('enable_purchasing', models.BooleanField(default=True)),
                ('enable_auto_invoicing', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FooterBottom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_text', models.TextField(verbose_name='Small Text (Under Logo)')),
                ('first_column_title', models.CharField(max_length=100)),
                ('first_column_choice', models.CharField(max_length=100)),
                ('first_column_description', ckeditor.fields.RichTextField(help_text='Use <ul> and <li> tags')),
                ('second_column_title', models.CharField(max_length=100)),
                ('second_column_description', ckeditor.fields.RichTextField(help_text='Use <ul> and <li> tags')),
                ('third_column_title', models.CharField(max_length=100)),
                ('third_column_description', ckeditor.fields.RichTextField(help_text='Use <ul> and <li> tags')),
            ],
        ),
        migrations.CreateModel(
            name='FooterColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content_choice', models.CharField(blank=True, max_length=100, null=True)),
                ('description', ckeditor.fields.RichTextField(help_text='Use <ul> and <li> tags')),
            ],
            options={
                'verbose_name': 'Footer Column',
                'verbose_name_plural': 'Footer Columns',
            },
        ),
        migrations.CreateModel(
            name='FooterCopyright',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copyright_text', models.CharField(max_length=100, verbose_name='Copyright Text')),
                ('privacy_policy', models.CharField(max_length=20, verbose_name='Privacy Policy Page Title')),
                ('terms_page', models.CharField(max_length=20, verbose_name='Terms Page Title')),
            ],
        ),
        migrations.CreateModel(
            name='FooterLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FooterTop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('button_text', models.CharField(max_length=100)),
                ('button_url', models.URLField()),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_name', models.CharField(max_length=255, verbose_name='Application Name')),
                ('author', models.CharField(max_length=255, verbose_name='Author')),
                ('default_menu', models.BooleanField(default=True, help_text='Enable or disable the default menu.')),
                ('search_feature', models.BooleanField(default=True, help_text='Enable search on the frontend.')),
                ('whatsapp_button_direction', models.CharField(choices=[('left', 'Left'), ('right', 'Right')], default='right', max_length=10, verbose_name='Whatsapp Button Direction')),
                ('scroll_to_top_direction', models.CharField(choices=[('left', 'Left'), ('right', 'Right')], default='left', max_length=10, verbose_name='Scroll To Top Direction')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HRMSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clock_in_max_time', models.TimeField(default='09:00:00', verbose_name='HRM Attendance Clock In Max Time')),
                ('clock_out_min_time', models.TimeField(default='17:00:00', verbose_name='HRM Attendance Clock Out Min Time')),
            ],
        ),
        migrations.CreateModel(
            name='LogoSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_light', models.ImageField(upload_to='app_config/', verbose_name='Logo Light')),
                ('logo_dark', models.ImageField(upload_to='app_config/', verbose_name='Logo Dark')),
                ('favicon', models.ImageField(upload_to='app_config/', verbose_name='Favicon')),
                ('invoice_logo', models.ImageField(upload_to='app_config/', verbose_name='Invoice Logo')),
                ('website_logo_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Website Logo Width (px)')),
                ('invoice_logo_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Invoice Logo Width (px)')),
            ],
        ),
        migrations.CreateModel(
            name='OtherSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_css', models.TextField(blank=True, null=True, verbose_name='Custom CSS')),
                ('custom_js', models.TextField(blank=True, null=True, verbose_name='Custom JS')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('paypal', 'PayPal'), ('stripe', 'Stripe'), ('sslcommerz', 'SSLCOMMERZ'), ('instamojo', 'Instamojo'), ('paymob', 'Paymob')], help_text='Select the payment gateway you want to configure.', max_length=50, verbose_name='Payment Gateway')),
                ('config', models.JSONField(default=dict, help_text='Enter key-value pairs for API credentials and settings (e.g., client_id, secret_key, etc.)', verbose_name='Configuration')),
                ('sandbox', models.BooleanField(default=False, help_text='Enable this to use test/sandbox credentials instead of live ones.', verbose_name='Sandbox Mode')),
                ('active', models.BooleanField(default=False, help_text='Enable this payment method for users.', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
            },
        ),
        migrations.CreateModel(
            name='SEOSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(max_length=150, verbose_name='Meta Title')),
                ('tag_line', models.CharField(max_length=150, verbose_name='Tag Line')),
                ('meta_description', models.TextField(verbose_name='Meta Description')),
                ('seo_keywords', models.TextField(help_text='Comma-separated keywords for SEO', verbose_name='SEO Keywords')),
                ('meta_image', models.ImageField(blank=True, null=True, upload_to='meta_images/', verbose_name='Meta Image')),
            ],
            options={
                'verbose_name': 'SEO Settings',
                'verbose_name_plural': 'SEO Settings',
            },
        ),
        migrations.CreateModel(
            name='SMSSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twilio_sid', models.CharField(max_length=100, verbose_name='Twilio SID')),
                ('auth_token', models.CharField(max_length=100, verbose_name='Auth Token')),
                ('twilio_number', models.CharField(max_length=20, verbose_name='Twilio Number')),
            ],
        ),
        migrations.CreateModel(
            name='SocialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('pinterest', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_analytics_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Google Analytics Measurement Code')),
                ('facebook_pixel_code', models.TextField(blank=True, null=True, verbose_name='Facebook Pixel Code')),
                ('facebook_chat_code', models.TextField(blank=True, null=True, verbose_name='Facebook Chat Code')),
                ('whatsapp_button_enabled', models.BooleanField(default=False, verbose_name='WhatsApp Button')),
                ('facebook_chat_button_enabled', models.BooleanField(default=False, verbose_name='Facebook Chat Button')),
            ],
        ),
        migrations.CreateModel(
            name='SubscribeForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('placeholder', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('button_text', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
    ]
